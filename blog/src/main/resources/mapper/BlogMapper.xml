<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.feige.dao.BlogMapper">
    <insert id="addBlog" parameterType="Blog">
        insert into `blog`(type_name,title,content,create_time,change_time,author,view) values (#{typeName},#{title},#{content},#{createTime},#{changeTime},#{author},#{view})
    </insert>
    <delete id="deleteBlog" parameterType="String">
        delete from `blog` where title=#{title}
    </delete>
    <update id="updateBlog" parameterType="Blog">
        update `blog` set type_name=#{typeName},title=#{title},content=#{content},create_time=#{createTime},change_time=#{changeTime},author=#{author},view=#{view} where id=#{id}
    </update>
    <select id="getBlogs" resultType="Blog" parameterType="com.feige.common.utils.SelectParam">
        select id,type_name typeName,title,content,create_time createTime,change_time changeTime,author,view from blog
        <if test="searchContent==null">
            limit #{page},#{limit}
        </if>
        <if test="searchContent!=null">
            where title like #{searchContent} or content like #{searchContent} limit #{page},#{limit}
        </if>
    </select>
    <select id="getBlogById" resultType="Blog" parameterType="Integer">
        select id,type_name typeName,title,content,create_time createTime,change_time changeTime,author,view from blog where id=#{id}
    </select>
    <select id="getBlog" resultType="Blog" parameterType="String">
        select id,type_name typeName,title,content,create_time createTime,change_time changeTime,author,view from blog where title=#{searchContent}
    </select>
    <select id="getCount" resultType="int" parameterType="String">
        select count(*) from `blog`
        <if test="searchContent!=null">
            where title like #{searchContent} or content like #{searchContent}
        </if>
    </select>
</mapper>